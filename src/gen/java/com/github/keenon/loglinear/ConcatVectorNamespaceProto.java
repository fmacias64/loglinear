// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConcatVectorNamespace.proto

package com.github.keenon.loglinear;

public final class ConcatVectorNamespaceProto {
  private ConcatVectorNamespaceProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ConcatVectorNamespaceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.keenon.ConcatVectorNamespace)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
     */
    java.util.List<com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent> 
        getFeatureToIndexList();
    /**
     * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
     */
    com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent getFeatureToIndex(int index);
    /**
     * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
     */
    int getFeatureToIndexCount();
    /**
     * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
     */
    java.util.List<? extends com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponentOrBuilder> 
        getFeatureToIndexOrBuilderList();
    /**
     * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
     */
    com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponentOrBuilder getFeatureToIndexOrBuilder(
        int index);

    /**
     * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
     */
    java.util.List<com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex> 
        getSparseFeatureIndexList();
    /**
     * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
     */
    com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex getSparseFeatureIndex(int index);
    /**
     * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
     */
    int getSparseFeatureIndexCount();
    /**
     * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
     */
    java.util.List<? extends com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndexOrBuilder> 
        getSparseFeatureIndexOrBuilderList();
    /**
     * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
     */
    com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndexOrBuilder getSparseFeatureIndexOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.github.keenon.ConcatVectorNamespace}
   */
  public static final class ConcatVectorNamespace extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.github.keenon.ConcatVectorNamespace)
      ConcatVectorNamespaceOrBuilder {
    // Use ConcatVectorNamespace.newBuilder() to construct.
    private ConcatVectorNamespace(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ConcatVectorNamespace(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ConcatVectorNamespace defaultInstance;
    public static ConcatVectorNamespace getDefaultInstance() {
      return defaultInstance;
    }

    public ConcatVectorNamespace getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ConcatVectorNamespace(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                featureToIndex_ = new java.util.ArrayList<com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent>();
                mutable_bitField0_ |= 0x00000001;
              }
              featureToIndex_.add(input.readMessage(com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                sparseFeatureIndex_ = new java.util.ArrayList<com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex>();
                mutable_bitField0_ |= 0x00000002;
              }
              sparseFeatureIndex_.add(input.readMessage(com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          featureToIndex_ = java.util.Collections.unmodifiableList(featureToIndex_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          sparseFeatureIndex_ = java.util.Collections.unmodifiableList(sparseFeatureIndex_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.keenon.loglinear.ConcatVectorNamespaceProto.internal_static_com_github_keenon_ConcatVectorNamespace_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.keenon.loglinear.ConcatVectorNamespaceProto.internal_static_com_github_keenon_ConcatVectorNamespace_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.class, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.Builder.class);
    }

    public static com.google.protobuf.Parser<ConcatVectorNamespace> PARSER =
        new com.google.protobuf.AbstractParser<ConcatVectorNamespace>() {
      public ConcatVectorNamespace parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConcatVectorNamespace(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ConcatVectorNamespace> getParserForType() {
      return PARSER;
    }

    public interface FeatureToIndexComponentOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required string key = 1;</code>
       */
      boolean hasKey();
      /**
       * <code>required string key = 1;</code>
       */
      java.lang.String getKey();
      /**
       * <code>required string key = 1;</code>
       */
      com.google.protobuf.ByteString
          getKeyBytes();

      /**
       * <code>required int32 data = 2;</code>
       */
      boolean hasData();
      /**
       * <code>required int32 data = 2;</code>
       */
      int getData();
    }
    /**
     * Protobuf type {@code com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent}
     */
    public static final class FeatureToIndexComponent extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent)
        FeatureToIndexComponentOrBuilder {
      // Use FeatureToIndexComponent.newBuilder() to construct.
      private FeatureToIndexComponent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private FeatureToIndexComponent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final FeatureToIndexComponent defaultInstance;
      public static FeatureToIndexComponent getDefaultInstance() {
        return defaultInstance;
      }

      public FeatureToIndexComponent getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private FeatureToIndexComponent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                key_ = bs;
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                data_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.keenon.loglinear.ConcatVectorNamespaceProto.internal_static_com_github_keenon_ConcatVectorNamespace_FeatureToIndexComponent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.keenon.loglinear.ConcatVectorNamespaceProto.internal_static_com_github_keenon_ConcatVectorNamespace_FeatureToIndexComponent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.class, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.Builder.class);
      }

      public static com.google.protobuf.Parser<FeatureToIndexComponent> PARSER =
          new com.google.protobuf.AbstractParser<FeatureToIndexComponent>() {
        public FeatureToIndexComponent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new FeatureToIndexComponent(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<FeatureToIndexComponent> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int KEY_FIELD_NUMBER = 1;
      private java.lang.Object key_;
      /**
       * <code>required string key = 1;</code>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string key = 1;</code>
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            key_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DATA_FIELD_NUMBER = 2;
      private int data_;
      /**
       * <code>required int32 data = 2;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 data = 2;</code>
       */
      public int getData() {
        return data_;
      }

      private void initFields() {
        key_ = "";
        data_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasKey()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasData()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getKeyBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, data_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getKeyBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, data_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent)
          com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponentOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.github.keenon.loglinear.ConcatVectorNamespaceProto.internal_static_com_github_keenon_ConcatVectorNamespace_FeatureToIndexComponent_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.github.keenon.loglinear.ConcatVectorNamespaceProto.internal_static_com_github_keenon_ConcatVectorNamespace_FeatureToIndexComponent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.class, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.Builder.class);
        }

        // Construct using com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          key_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          data_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.github.keenon.loglinear.ConcatVectorNamespaceProto.internal_static_com_github_keenon_ConcatVectorNamespace_FeatureToIndexComponent_descriptor;
        }

        public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent getDefaultInstanceForType() {
          return com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.getDefaultInstance();
        }

        public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent build() {
          com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent buildPartial() {
          com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent result = new com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.key_ = key_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.data_ = data_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent) {
            return mergeFrom((com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent other) {
          if (other == com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.getDefaultInstance()) return this;
          if (other.hasKey()) {
            bitField0_ |= 0x00000001;
            key_ = other.key_;
            onChanged();
          }
          if (other.hasData()) {
            setData(other.getData());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasKey()) {
            
            return false;
          }
          if (!hasData()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object key_ = "";
        /**
         * <code>required string key = 1;</code>
         */
        public boolean hasKey() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string key = 1;</code>
         */
        public java.lang.String getKey() {
          java.lang.Object ref = key_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              key_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string key = 1;</code>
         */
        public com.google.protobuf.ByteString
            getKeyBytes() {
          java.lang.Object ref = key_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            key_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string key = 1;</code>
         */
        public Builder setKey(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          key_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string key = 1;</code>
         */
        public Builder clearKey() {
          bitField0_ = (bitField0_ & ~0x00000001);
          key_ = getDefaultInstance().getKey();
          onChanged();
          return this;
        }
        /**
         * <code>required string key = 1;</code>
         */
        public Builder setKeyBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          key_ = value;
          onChanged();
          return this;
        }

        private int data_ ;
        /**
         * <code>required int32 data = 2;</code>
         */
        public boolean hasData() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required int32 data = 2;</code>
         */
        public int getData() {
          return data_;
        }
        /**
         * <code>required int32 data = 2;</code>
         */
        public Builder setData(int value) {
          bitField0_ |= 0x00000002;
          data_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 data = 2;</code>
         */
        public Builder clearData() {
          bitField0_ = (bitField0_ & ~0x00000002);
          data_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent)
      }

      static {
        defaultInstance = new FeatureToIndexComponent(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent)
    }

    public interface SparseFeatureIndexOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required string key = 1;</code>
       */
      boolean hasKey();
      /**
       * <code>required string key = 1;</code>
       */
      java.lang.String getKey();
      /**
       * <code>required string key = 1;</code>
       */
      com.google.protobuf.ByteString
          getKeyBytes();

      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
       */
      java.util.List<com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent> 
          getFeatureToIndexList();
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
       */
      com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent getFeatureToIndex(int index);
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
       */
      int getFeatureToIndexCount();
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
       */
      java.util.List<? extends com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponentOrBuilder> 
          getFeatureToIndexOrBuilderList();
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
       */
      com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponentOrBuilder getFeatureToIndexOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex}
     */
    public static final class SparseFeatureIndex extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex)
        SparseFeatureIndexOrBuilder {
      // Use SparseFeatureIndex.newBuilder() to construct.
      private SparseFeatureIndex(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private SparseFeatureIndex(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final SparseFeatureIndex defaultInstance;
      public static SparseFeatureIndex getDefaultInstance() {
        return defaultInstance;
      }

      public SparseFeatureIndex getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private SparseFeatureIndex(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                key_ = bs;
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  featureToIndex_ = new java.util.ArrayList<com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent>();
                  mutable_bitField0_ |= 0x00000002;
                }
                featureToIndex_.add(input.readMessage(com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            featureToIndex_ = java.util.Collections.unmodifiableList(featureToIndex_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.keenon.loglinear.ConcatVectorNamespaceProto.internal_static_com_github_keenon_ConcatVectorNamespace_SparseFeatureIndex_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.keenon.loglinear.ConcatVectorNamespaceProto.internal_static_com_github_keenon_ConcatVectorNamespace_SparseFeatureIndex_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex.class, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex.Builder.class);
      }

      public static com.google.protobuf.Parser<SparseFeatureIndex> PARSER =
          new com.google.protobuf.AbstractParser<SparseFeatureIndex>() {
        public SparseFeatureIndex parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SparseFeatureIndex(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<SparseFeatureIndex> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int KEY_FIELD_NUMBER = 1;
      private java.lang.Object key_;
      /**
       * <code>required string key = 1;</code>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string key = 1;</code>
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            key_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FEATURETOINDEX_FIELD_NUMBER = 2;
      private java.util.List<com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent> featureToIndex_;
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
       */
      public java.util.List<com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent> getFeatureToIndexList() {
        return featureToIndex_;
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
       */
      public java.util.List<? extends com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponentOrBuilder> 
          getFeatureToIndexOrBuilderList() {
        return featureToIndex_;
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
       */
      public int getFeatureToIndexCount() {
        return featureToIndex_.size();
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
       */
      public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent getFeatureToIndex(int index) {
        return featureToIndex_.get(index);
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
       */
      public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponentOrBuilder getFeatureToIndexOrBuilder(
          int index) {
        return featureToIndex_.get(index);
      }

      private void initFields() {
        key_ = "";
        featureToIndex_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasKey()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getFeatureToIndexCount(); i++) {
          if (!getFeatureToIndex(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getKeyBytes());
        }
        for (int i = 0; i < featureToIndex_.size(); i++) {
          output.writeMessage(2, featureToIndex_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getKeyBytes());
        }
        for (int i = 0; i < featureToIndex_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, featureToIndex_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex)
          com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndexOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.github.keenon.loglinear.ConcatVectorNamespaceProto.internal_static_com_github_keenon_ConcatVectorNamespace_SparseFeatureIndex_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.github.keenon.loglinear.ConcatVectorNamespaceProto.internal_static_com_github_keenon_ConcatVectorNamespace_SparseFeatureIndex_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex.class, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex.Builder.class);
        }

        // Construct using com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getFeatureToIndexFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          key_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          if (featureToIndexBuilder_ == null) {
            featureToIndex_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            featureToIndexBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.github.keenon.loglinear.ConcatVectorNamespaceProto.internal_static_com_github_keenon_ConcatVectorNamespace_SparseFeatureIndex_descriptor;
        }

        public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex getDefaultInstanceForType() {
          return com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex.getDefaultInstance();
        }

        public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex build() {
          com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex buildPartial() {
          com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex result = new com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.key_ = key_;
          if (featureToIndexBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              featureToIndex_ = java.util.Collections.unmodifiableList(featureToIndex_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.featureToIndex_ = featureToIndex_;
          } else {
            result.featureToIndex_ = featureToIndexBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex) {
            return mergeFrom((com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex other) {
          if (other == com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex.getDefaultInstance()) return this;
          if (other.hasKey()) {
            bitField0_ |= 0x00000001;
            key_ = other.key_;
            onChanged();
          }
          if (featureToIndexBuilder_ == null) {
            if (!other.featureToIndex_.isEmpty()) {
              if (featureToIndex_.isEmpty()) {
                featureToIndex_ = other.featureToIndex_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureFeatureToIndexIsMutable();
                featureToIndex_.addAll(other.featureToIndex_);
              }
              onChanged();
            }
          } else {
            if (!other.featureToIndex_.isEmpty()) {
              if (featureToIndexBuilder_.isEmpty()) {
                featureToIndexBuilder_.dispose();
                featureToIndexBuilder_ = null;
                featureToIndex_ = other.featureToIndex_;
                bitField0_ = (bitField0_ & ~0x00000002);
                featureToIndexBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getFeatureToIndexFieldBuilder() : null;
              } else {
                featureToIndexBuilder_.addAllMessages(other.featureToIndex_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasKey()) {
            
            return false;
          }
          for (int i = 0; i < getFeatureToIndexCount(); i++) {
            if (!getFeatureToIndex(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object key_ = "";
        /**
         * <code>required string key = 1;</code>
         */
        public boolean hasKey() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string key = 1;</code>
         */
        public java.lang.String getKey() {
          java.lang.Object ref = key_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              key_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string key = 1;</code>
         */
        public com.google.protobuf.ByteString
            getKeyBytes() {
          java.lang.Object ref = key_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            key_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string key = 1;</code>
         */
        public Builder setKey(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          key_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string key = 1;</code>
         */
        public Builder clearKey() {
          bitField0_ = (bitField0_ & ~0x00000001);
          key_ = getDefaultInstance().getKey();
          onChanged();
          return this;
        }
        /**
         * <code>required string key = 1;</code>
         */
        public Builder setKeyBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          key_ = value;
          onChanged();
          return this;
        }

        private java.util.List<com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent> featureToIndex_ =
          java.util.Collections.emptyList();
        private void ensureFeatureToIndexIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            featureToIndex_ = new java.util.ArrayList<com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent>(featureToIndex_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.Builder, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponentOrBuilder> featureToIndexBuilder_;

        /**
         * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
         */
        public java.util.List<com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent> getFeatureToIndexList() {
          if (featureToIndexBuilder_ == null) {
            return java.util.Collections.unmodifiableList(featureToIndex_);
          } else {
            return featureToIndexBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
         */
        public int getFeatureToIndexCount() {
          if (featureToIndexBuilder_ == null) {
            return featureToIndex_.size();
          } else {
            return featureToIndexBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
         */
        public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent getFeatureToIndex(int index) {
          if (featureToIndexBuilder_ == null) {
            return featureToIndex_.get(index);
          } else {
            return featureToIndexBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
         */
        public Builder setFeatureToIndex(
            int index, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent value) {
          if (featureToIndexBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureFeatureToIndexIsMutable();
            featureToIndex_.set(index, value);
            onChanged();
          } else {
            featureToIndexBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
         */
        public Builder setFeatureToIndex(
            int index, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.Builder builderForValue) {
          if (featureToIndexBuilder_ == null) {
            ensureFeatureToIndexIsMutable();
            featureToIndex_.set(index, builderForValue.build());
            onChanged();
          } else {
            featureToIndexBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
         */
        public Builder addFeatureToIndex(com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent value) {
          if (featureToIndexBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureFeatureToIndexIsMutable();
            featureToIndex_.add(value);
            onChanged();
          } else {
            featureToIndexBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
         */
        public Builder addFeatureToIndex(
            int index, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent value) {
          if (featureToIndexBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureFeatureToIndexIsMutable();
            featureToIndex_.add(index, value);
            onChanged();
          } else {
            featureToIndexBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
         */
        public Builder addFeatureToIndex(
            com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.Builder builderForValue) {
          if (featureToIndexBuilder_ == null) {
            ensureFeatureToIndexIsMutable();
            featureToIndex_.add(builderForValue.build());
            onChanged();
          } else {
            featureToIndexBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
         */
        public Builder addFeatureToIndex(
            int index, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.Builder builderForValue) {
          if (featureToIndexBuilder_ == null) {
            ensureFeatureToIndexIsMutable();
            featureToIndex_.add(index, builderForValue.build());
            onChanged();
          } else {
            featureToIndexBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
         */
        public Builder addAllFeatureToIndex(
            java.lang.Iterable<? extends com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent> values) {
          if (featureToIndexBuilder_ == null) {
            ensureFeatureToIndexIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, featureToIndex_);
            onChanged();
          } else {
            featureToIndexBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
         */
        public Builder clearFeatureToIndex() {
          if (featureToIndexBuilder_ == null) {
            featureToIndex_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            featureToIndexBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
         */
        public Builder removeFeatureToIndex(int index) {
          if (featureToIndexBuilder_ == null) {
            ensureFeatureToIndexIsMutable();
            featureToIndex_.remove(index);
            onChanged();
          } else {
            featureToIndexBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
         */
        public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.Builder getFeatureToIndexBuilder(
            int index) {
          return getFeatureToIndexFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
         */
        public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponentOrBuilder getFeatureToIndexOrBuilder(
            int index) {
          if (featureToIndexBuilder_ == null) {
            return featureToIndex_.get(index);  } else {
            return featureToIndexBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
         */
        public java.util.List<? extends com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponentOrBuilder> 
             getFeatureToIndexOrBuilderList() {
          if (featureToIndexBuilder_ != null) {
            return featureToIndexBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(featureToIndex_);
          }
        }
        /**
         * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
         */
        public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.Builder addFeatureToIndexBuilder() {
          return getFeatureToIndexFieldBuilder().addBuilder(
              com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.getDefaultInstance());
        }
        /**
         * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
         */
        public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.Builder addFeatureToIndexBuilder(
            int index) {
          return getFeatureToIndexFieldBuilder().addBuilder(
              index, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.getDefaultInstance());
        }
        /**
         * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 2;</code>
         */
        public java.util.List<com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.Builder> 
             getFeatureToIndexBuilderList() {
          return getFeatureToIndexFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.Builder, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponentOrBuilder> 
            getFeatureToIndexFieldBuilder() {
          if (featureToIndexBuilder_ == null) {
            featureToIndexBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.Builder, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponentOrBuilder>(
                    featureToIndex_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            featureToIndex_ = null;
          }
          return featureToIndexBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex)
      }

      static {
        defaultInstance = new SparseFeatureIndex(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex)
    }

    public static final int FEATURETOINDEX_FIELD_NUMBER = 1;
    private java.util.List<com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent> featureToIndex_;
    /**
     * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
     */
    public java.util.List<com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent> getFeatureToIndexList() {
      return featureToIndex_;
    }
    /**
     * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
     */
    public java.util.List<? extends com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponentOrBuilder> 
        getFeatureToIndexOrBuilderList() {
      return featureToIndex_;
    }
    /**
     * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
     */
    public int getFeatureToIndexCount() {
      return featureToIndex_.size();
    }
    /**
     * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
     */
    public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent getFeatureToIndex(int index) {
      return featureToIndex_.get(index);
    }
    /**
     * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
     */
    public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponentOrBuilder getFeatureToIndexOrBuilder(
        int index) {
      return featureToIndex_.get(index);
    }

    public static final int SPARSEFEATUREINDEX_FIELD_NUMBER = 2;
    private java.util.List<com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex> sparseFeatureIndex_;
    /**
     * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
     */
    public java.util.List<com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex> getSparseFeatureIndexList() {
      return sparseFeatureIndex_;
    }
    /**
     * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
     */
    public java.util.List<? extends com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndexOrBuilder> 
        getSparseFeatureIndexOrBuilderList() {
      return sparseFeatureIndex_;
    }
    /**
     * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
     */
    public int getSparseFeatureIndexCount() {
      return sparseFeatureIndex_.size();
    }
    /**
     * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
     */
    public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex getSparseFeatureIndex(int index) {
      return sparseFeatureIndex_.get(index);
    }
    /**
     * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
     */
    public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndexOrBuilder getSparseFeatureIndexOrBuilder(
        int index) {
      return sparseFeatureIndex_.get(index);
    }

    private void initFields() {
      featureToIndex_ = java.util.Collections.emptyList();
      sparseFeatureIndex_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getFeatureToIndexCount(); i++) {
        if (!getFeatureToIndex(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getSparseFeatureIndexCount(); i++) {
        if (!getSparseFeatureIndex(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < featureToIndex_.size(); i++) {
        output.writeMessage(1, featureToIndex_.get(i));
      }
      for (int i = 0; i < sparseFeatureIndex_.size(); i++) {
        output.writeMessage(2, sparseFeatureIndex_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < featureToIndex_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, featureToIndex_.get(i));
      }
      for (int i = 0; i < sparseFeatureIndex_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, sparseFeatureIndex_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.keenon.ConcatVectorNamespace}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.keenon.ConcatVectorNamespace)
        com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespaceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.keenon.loglinear.ConcatVectorNamespaceProto.internal_static_com_github_keenon_ConcatVectorNamespace_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.keenon.loglinear.ConcatVectorNamespaceProto.internal_static_com_github_keenon_ConcatVectorNamespace_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.class, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.Builder.class);
      }

      // Construct using com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFeatureToIndexFieldBuilder();
          getSparseFeatureIndexFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (featureToIndexBuilder_ == null) {
          featureToIndex_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          featureToIndexBuilder_.clear();
        }
        if (sparseFeatureIndexBuilder_ == null) {
          sparseFeatureIndex_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          sparseFeatureIndexBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.keenon.loglinear.ConcatVectorNamespaceProto.internal_static_com_github_keenon_ConcatVectorNamespace_descriptor;
      }

      public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace getDefaultInstanceForType() {
        return com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.getDefaultInstance();
      }

      public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace build() {
        com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace buildPartial() {
        com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace result = new com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace(this);
        int from_bitField0_ = bitField0_;
        if (featureToIndexBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            featureToIndex_ = java.util.Collections.unmodifiableList(featureToIndex_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.featureToIndex_ = featureToIndex_;
        } else {
          result.featureToIndex_ = featureToIndexBuilder_.build();
        }
        if (sparseFeatureIndexBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            sparseFeatureIndex_ = java.util.Collections.unmodifiableList(sparseFeatureIndex_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.sparseFeatureIndex_ = sparseFeatureIndex_;
        } else {
          result.sparseFeatureIndex_ = sparseFeatureIndexBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace) {
          return mergeFrom((com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace other) {
        if (other == com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.getDefaultInstance()) return this;
        if (featureToIndexBuilder_ == null) {
          if (!other.featureToIndex_.isEmpty()) {
            if (featureToIndex_.isEmpty()) {
              featureToIndex_ = other.featureToIndex_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFeatureToIndexIsMutable();
              featureToIndex_.addAll(other.featureToIndex_);
            }
            onChanged();
          }
        } else {
          if (!other.featureToIndex_.isEmpty()) {
            if (featureToIndexBuilder_.isEmpty()) {
              featureToIndexBuilder_.dispose();
              featureToIndexBuilder_ = null;
              featureToIndex_ = other.featureToIndex_;
              bitField0_ = (bitField0_ & ~0x00000001);
              featureToIndexBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFeatureToIndexFieldBuilder() : null;
            } else {
              featureToIndexBuilder_.addAllMessages(other.featureToIndex_);
            }
          }
        }
        if (sparseFeatureIndexBuilder_ == null) {
          if (!other.sparseFeatureIndex_.isEmpty()) {
            if (sparseFeatureIndex_.isEmpty()) {
              sparseFeatureIndex_ = other.sparseFeatureIndex_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSparseFeatureIndexIsMutable();
              sparseFeatureIndex_.addAll(other.sparseFeatureIndex_);
            }
            onChanged();
          }
        } else {
          if (!other.sparseFeatureIndex_.isEmpty()) {
            if (sparseFeatureIndexBuilder_.isEmpty()) {
              sparseFeatureIndexBuilder_.dispose();
              sparseFeatureIndexBuilder_ = null;
              sparseFeatureIndex_ = other.sparseFeatureIndex_;
              bitField0_ = (bitField0_ & ~0x00000002);
              sparseFeatureIndexBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSparseFeatureIndexFieldBuilder() : null;
            } else {
              sparseFeatureIndexBuilder_.addAllMessages(other.sparseFeatureIndex_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getFeatureToIndexCount(); i++) {
          if (!getFeatureToIndex(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getSparseFeatureIndexCount(); i++) {
          if (!getSparseFeatureIndex(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent> featureToIndex_ =
        java.util.Collections.emptyList();
      private void ensureFeatureToIndexIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          featureToIndex_ = new java.util.ArrayList<com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent>(featureToIndex_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.Builder, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponentOrBuilder> featureToIndexBuilder_;

      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
       */
      public java.util.List<com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent> getFeatureToIndexList() {
        if (featureToIndexBuilder_ == null) {
          return java.util.Collections.unmodifiableList(featureToIndex_);
        } else {
          return featureToIndexBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
       */
      public int getFeatureToIndexCount() {
        if (featureToIndexBuilder_ == null) {
          return featureToIndex_.size();
        } else {
          return featureToIndexBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
       */
      public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent getFeatureToIndex(int index) {
        if (featureToIndexBuilder_ == null) {
          return featureToIndex_.get(index);
        } else {
          return featureToIndexBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
       */
      public Builder setFeatureToIndex(
          int index, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent value) {
        if (featureToIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFeatureToIndexIsMutable();
          featureToIndex_.set(index, value);
          onChanged();
        } else {
          featureToIndexBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
       */
      public Builder setFeatureToIndex(
          int index, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.Builder builderForValue) {
        if (featureToIndexBuilder_ == null) {
          ensureFeatureToIndexIsMutable();
          featureToIndex_.set(index, builderForValue.build());
          onChanged();
        } else {
          featureToIndexBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
       */
      public Builder addFeatureToIndex(com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent value) {
        if (featureToIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFeatureToIndexIsMutable();
          featureToIndex_.add(value);
          onChanged();
        } else {
          featureToIndexBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
       */
      public Builder addFeatureToIndex(
          int index, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent value) {
        if (featureToIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFeatureToIndexIsMutable();
          featureToIndex_.add(index, value);
          onChanged();
        } else {
          featureToIndexBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
       */
      public Builder addFeatureToIndex(
          com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.Builder builderForValue) {
        if (featureToIndexBuilder_ == null) {
          ensureFeatureToIndexIsMutable();
          featureToIndex_.add(builderForValue.build());
          onChanged();
        } else {
          featureToIndexBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
       */
      public Builder addFeatureToIndex(
          int index, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.Builder builderForValue) {
        if (featureToIndexBuilder_ == null) {
          ensureFeatureToIndexIsMutable();
          featureToIndex_.add(index, builderForValue.build());
          onChanged();
        } else {
          featureToIndexBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
       */
      public Builder addAllFeatureToIndex(
          java.lang.Iterable<? extends com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent> values) {
        if (featureToIndexBuilder_ == null) {
          ensureFeatureToIndexIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, featureToIndex_);
          onChanged();
        } else {
          featureToIndexBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
       */
      public Builder clearFeatureToIndex() {
        if (featureToIndexBuilder_ == null) {
          featureToIndex_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          featureToIndexBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
       */
      public Builder removeFeatureToIndex(int index) {
        if (featureToIndexBuilder_ == null) {
          ensureFeatureToIndexIsMutable();
          featureToIndex_.remove(index);
          onChanged();
        } else {
          featureToIndexBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
       */
      public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.Builder getFeatureToIndexBuilder(
          int index) {
        return getFeatureToIndexFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
       */
      public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponentOrBuilder getFeatureToIndexOrBuilder(
          int index) {
        if (featureToIndexBuilder_ == null) {
          return featureToIndex_.get(index);  } else {
          return featureToIndexBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
       */
      public java.util.List<? extends com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponentOrBuilder> 
           getFeatureToIndexOrBuilderList() {
        if (featureToIndexBuilder_ != null) {
          return featureToIndexBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(featureToIndex_);
        }
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
       */
      public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.Builder addFeatureToIndexBuilder() {
        return getFeatureToIndexFieldBuilder().addBuilder(
            com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.getDefaultInstance());
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
       */
      public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.Builder addFeatureToIndexBuilder(
          int index) {
        return getFeatureToIndexFieldBuilder().addBuilder(
            index, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.getDefaultInstance());
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.FeatureToIndexComponent featureToIndex = 1;</code>
       */
      public java.util.List<com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.Builder> 
           getFeatureToIndexBuilderList() {
        return getFeatureToIndexFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.Builder, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponentOrBuilder> 
          getFeatureToIndexFieldBuilder() {
        if (featureToIndexBuilder_ == null) {
          featureToIndexBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponent.Builder, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.FeatureToIndexComponentOrBuilder>(
                  featureToIndex_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          featureToIndex_ = null;
        }
        return featureToIndexBuilder_;
      }

      private java.util.List<com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex> sparseFeatureIndex_ =
        java.util.Collections.emptyList();
      private void ensureSparseFeatureIndexIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          sparseFeatureIndex_ = new java.util.ArrayList<com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex>(sparseFeatureIndex_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex.Builder, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndexOrBuilder> sparseFeatureIndexBuilder_;

      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
       */
      public java.util.List<com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex> getSparseFeatureIndexList() {
        if (sparseFeatureIndexBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sparseFeatureIndex_);
        } else {
          return sparseFeatureIndexBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
       */
      public int getSparseFeatureIndexCount() {
        if (sparseFeatureIndexBuilder_ == null) {
          return sparseFeatureIndex_.size();
        } else {
          return sparseFeatureIndexBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
       */
      public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex getSparseFeatureIndex(int index) {
        if (sparseFeatureIndexBuilder_ == null) {
          return sparseFeatureIndex_.get(index);
        } else {
          return sparseFeatureIndexBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
       */
      public Builder setSparseFeatureIndex(
          int index, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex value) {
        if (sparseFeatureIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSparseFeatureIndexIsMutable();
          sparseFeatureIndex_.set(index, value);
          onChanged();
        } else {
          sparseFeatureIndexBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
       */
      public Builder setSparseFeatureIndex(
          int index, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex.Builder builderForValue) {
        if (sparseFeatureIndexBuilder_ == null) {
          ensureSparseFeatureIndexIsMutable();
          sparseFeatureIndex_.set(index, builderForValue.build());
          onChanged();
        } else {
          sparseFeatureIndexBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
       */
      public Builder addSparseFeatureIndex(com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex value) {
        if (sparseFeatureIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSparseFeatureIndexIsMutable();
          sparseFeatureIndex_.add(value);
          onChanged();
        } else {
          sparseFeatureIndexBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
       */
      public Builder addSparseFeatureIndex(
          int index, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex value) {
        if (sparseFeatureIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSparseFeatureIndexIsMutable();
          sparseFeatureIndex_.add(index, value);
          onChanged();
        } else {
          sparseFeatureIndexBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
       */
      public Builder addSparseFeatureIndex(
          com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex.Builder builderForValue) {
        if (sparseFeatureIndexBuilder_ == null) {
          ensureSparseFeatureIndexIsMutable();
          sparseFeatureIndex_.add(builderForValue.build());
          onChanged();
        } else {
          sparseFeatureIndexBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
       */
      public Builder addSparseFeatureIndex(
          int index, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex.Builder builderForValue) {
        if (sparseFeatureIndexBuilder_ == null) {
          ensureSparseFeatureIndexIsMutable();
          sparseFeatureIndex_.add(index, builderForValue.build());
          onChanged();
        } else {
          sparseFeatureIndexBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
       */
      public Builder addAllSparseFeatureIndex(
          java.lang.Iterable<? extends com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex> values) {
        if (sparseFeatureIndexBuilder_ == null) {
          ensureSparseFeatureIndexIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sparseFeatureIndex_);
          onChanged();
        } else {
          sparseFeatureIndexBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
       */
      public Builder clearSparseFeatureIndex() {
        if (sparseFeatureIndexBuilder_ == null) {
          sparseFeatureIndex_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          sparseFeatureIndexBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
       */
      public Builder removeSparseFeatureIndex(int index) {
        if (sparseFeatureIndexBuilder_ == null) {
          ensureSparseFeatureIndexIsMutable();
          sparseFeatureIndex_.remove(index);
          onChanged();
        } else {
          sparseFeatureIndexBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
       */
      public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex.Builder getSparseFeatureIndexBuilder(
          int index) {
        return getSparseFeatureIndexFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
       */
      public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndexOrBuilder getSparseFeatureIndexOrBuilder(
          int index) {
        if (sparseFeatureIndexBuilder_ == null) {
          return sparseFeatureIndex_.get(index);  } else {
          return sparseFeatureIndexBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
       */
      public java.util.List<? extends com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndexOrBuilder> 
           getSparseFeatureIndexOrBuilderList() {
        if (sparseFeatureIndexBuilder_ != null) {
          return sparseFeatureIndexBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sparseFeatureIndex_);
        }
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
       */
      public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex.Builder addSparseFeatureIndexBuilder() {
        return getSparseFeatureIndexFieldBuilder().addBuilder(
            com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex.getDefaultInstance());
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
       */
      public com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex.Builder addSparseFeatureIndexBuilder(
          int index) {
        return getSparseFeatureIndexFieldBuilder().addBuilder(
            index, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex.getDefaultInstance());
      }
      /**
       * <code>repeated .com.github.keenon.ConcatVectorNamespace.SparseFeatureIndex sparseFeatureIndex = 2;</code>
       */
      public java.util.List<com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex.Builder> 
           getSparseFeatureIndexBuilderList() {
        return getSparseFeatureIndexFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex.Builder, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndexOrBuilder> 
          getSparseFeatureIndexFieldBuilder() {
        if (sparseFeatureIndexBuilder_ == null) {
          sparseFeatureIndexBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndex.Builder, com.github.keenon.loglinear.ConcatVectorNamespaceProto.ConcatVectorNamespace.SparseFeatureIndexOrBuilder>(
                  sparseFeatureIndex_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          sparseFeatureIndex_ = null;
        }
        return sparseFeatureIndexBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.github.keenon.ConcatVectorNamespace)
    }

    static {
      defaultInstance = new ConcatVectorNamespace(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.github.keenon.ConcatVectorNamespace)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_keenon_ConcatVectorNamespace_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_keenon_ConcatVectorNamespace_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_keenon_ConcatVectorNamespace_FeatureToIndexComponent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_keenon_ConcatVectorNamespace_FeatureToIndexComponent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_keenon_ConcatVectorNamespace_SparseFeatureIndex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_github_keenon_ConcatVectorNamespace_SparseFeatureIndex_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033ConcatVectorNamespace.proto\022\021com.githu" +
      "b.keenon\"\375\002\n\025ConcatVectorNamespace\022X\n\016fe" +
      "atureToIndex\030\001 \003(\0132@.com.github.keenon.C" +
      "oncatVectorNamespace.FeatureToIndexCompo" +
      "nent\022W\n\022sparseFeatureIndex\030\002 \003(\0132;.com.g" +
      "ithub.keenon.ConcatVectorNamespace.Spars" +
      "eFeatureIndex\0324\n\027FeatureToIndexComponent" +
      "\022\013\n\003key\030\001 \002(\t\022\014\n\004data\030\002 \002(\005\032{\n\022SparseFea" +
      "tureIndex\022\013\n\003key\030\001 \002(\t\022X\n\016featureToIndex" +
      "\030\002 \003(\0132@.com.github.keenon.ConcatVectorN",
      "amespace.FeatureToIndexComponentB9\n\033com." +
      "github.keenon.loglinearB\032ConcatVectorNam" +
      "espaceProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_github_keenon_ConcatVectorNamespace_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_github_keenon_ConcatVectorNamespace_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_keenon_ConcatVectorNamespace_descriptor,
        new java.lang.String[] { "FeatureToIndex", "SparseFeatureIndex", });
    internal_static_com_github_keenon_ConcatVectorNamespace_FeatureToIndexComponent_descriptor =
      internal_static_com_github_keenon_ConcatVectorNamespace_descriptor.getNestedTypes().get(0);
    internal_static_com_github_keenon_ConcatVectorNamespace_FeatureToIndexComponent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_keenon_ConcatVectorNamespace_FeatureToIndexComponent_descriptor,
        new java.lang.String[] { "Key", "Data", });
    internal_static_com_github_keenon_ConcatVectorNamespace_SparseFeatureIndex_descriptor =
      internal_static_com_github_keenon_ConcatVectorNamespace_descriptor.getNestedTypes().get(1);
    internal_static_com_github_keenon_ConcatVectorNamespace_SparseFeatureIndex_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_github_keenon_ConcatVectorNamespace_SparseFeatureIndex_descriptor,
        new java.lang.String[] { "Key", "FeatureToIndex", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
